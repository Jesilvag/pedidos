//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.ServiceReferencePedidos {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePedidos.IServicePedidos")]
    public interface IServicePedidos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/GetAllPedidos", ReplyAction="http://tempuri.org/IServicePedidos/GetAllPedidosResponse")]
        Entities.Models.Pedido[] GetAllPedidos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/GetAllPedidos", ReplyAction="http://tempuri.org/IServicePedidos/GetAllPedidosResponse")]
        System.Threading.Tasks.Task<Entities.Models.Pedido[]> GetAllPedidosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/GetAllPedidosByCliente", ReplyAction="http://tempuri.org/IServicePedidos/GetAllPedidosByClienteResponse")]
        Entities.Models.Pedido[] GetAllPedidosByCliente(int IdCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/GetAllPedidosByCliente", ReplyAction="http://tempuri.org/IServicePedidos/GetAllPedidosByClienteResponse")]
        System.Threading.Tasks.Task<Entities.Models.Pedido[]> GetAllPedidosByClienteAsync(int IdCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/InsertPedido", ReplyAction="http://tempuri.org/IServicePedidos/InsertPedidoResponse")]
        int InsertPedido(Entities.Models.Pedido _Pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/InsertPedido", ReplyAction="http://tempuri.org/IServicePedidos/InsertPedidoResponse")]
        System.Threading.Tasks.Task<int> InsertPedidoAsync(Entities.Models.Pedido _Pedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/DeletePedido", ReplyAction="http://tempuri.org/IServicePedidos/DeletePedidoResponse")]
        int DeletePedido(Entities.Models.Pedido IdPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePedidos/DeletePedido", ReplyAction="http://tempuri.org/IServicePedidos/DeletePedidoResponse")]
        System.Threading.Tasks.Task<int> DeletePedidoAsync(Entities.Models.Pedido IdPedido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePedidosChannel : Data.ServiceReferencePedidos.IServicePedidos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePedidosClient : System.ServiceModel.ClientBase<Data.ServiceReferencePedidos.IServicePedidos>, Data.ServiceReferencePedidos.IServicePedidos {
        
        public ServicePedidosClient() {
        }
        
        public ServicePedidosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePedidosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePedidosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePedidosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Entities.Models.Pedido[] GetAllPedidos() {
            return base.Channel.GetAllPedidos();
        }
        
        public System.Threading.Tasks.Task<Entities.Models.Pedido[]> GetAllPedidosAsync() {
            return base.Channel.GetAllPedidosAsync();
        }
        
        public Entities.Models.Pedido[] GetAllPedidosByCliente(int IdCliente) {
            return base.Channel.GetAllPedidosByCliente(IdCliente);
        }
        
        public System.Threading.Tasks.Task<Entities.Models.Pedido[]> GetAllPedidosByClienteAsync(int IdCliente) {
            return base.Channel.GetAllPedidosByClienteAsync(IdCliente);
        }
        
        public int InsertPedido(Entities.Models.Pedido _Pedido) {
            return base.Channel.InsertPedido(_Pedido);
        }
        
        public System.Threading.Tasks.Task<int> InsertPedidoAsync(Entities.Models.Pedido _Pedido) {
            return base.Channel.InsertPedidoAsync(_Pedido);
        }
        
        public int DeletePedido(Entities.Models.Pedido IdPedido) {
            return base.Channel.DeletePedido(IdPedido);
        }
        
        public System.Threading.Tasks.Task<int> DeletePedidoAsync(Entities.Models.Pedido IdPedido) {
            return base.Channel.DeletePedidoAsync(IdPedido);
        }
    }
}
